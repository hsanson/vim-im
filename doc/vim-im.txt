*vim-im.txt*           For Vim version 7.3    Last change: 2014 January 23

Author:         Horacio Sanson
Licence:        Vim licence, see |license|
Homepage:       https://github.com/hsanson/vim-im
Version:        0.1.0

==============================================================================
Contents                                            *vim-im* *vim-im-contents*

         1. Intro ........................... |vim-im-intro|
         2. Requirements .................... |vim-im-requirements|
         3. Installation .................... |vim-im-installation|
         4. Usage ........................... |vim-im-usage|
            4.1 iBus < 1.5.0................. |vim-im-usage-old|
            4.2 iBus > 1.5.0................. |vim-im-usage-new|
         5. Todo ............................ |vim-im-todo|
         6. Credits ......................... |vim-im-credits|

==============================================================================
1. Intro                                                      *vim-im-intro*

Non english speakers that use vim to write in Japanese, Korean, Chinese or any
other language that requires a different input method must deal with the fact
that vim normal mode does not work if any of these input methods is enabled.
For this reason these users are forced to press an additional key when
switching between insert and normal modes:

  - press i to enter inser mode
  - press C-space or Kana key to switch on input method
  - write some text
  - press C-space or Kana key to switch off input method
  - press ESC to exit insert mode

If the user forgets to disable the input method before exiting insert mode she
will find that all commands in normal mode fail silently. This is because
normal mode does not work if a non ASCII input method is enabled.

This plugin tries to aleviate this issues by automagically switching off the
input method or set a default input method that works in normal mode when
leaving insert mode.

==============================================================================
2. Requirements                                           *vim-im-requirements*

This plugin uses DBUS interface to manipulate the IBus daemon. This means
that this plugin works only if your OS supports DBUS and uses IBus as input
method switcher.

I have tested this in Ubuntu 13.04 and Debian Jessie running KDE4 as desktop
environment.

This plugin has these requirements:

  - OS with DBUS support. Most Linux distros support DBUS.
  - IBus as input method switcher. Make sure you install ibus and configure it
    correctly.
  - Vim 7.3 or higher. This plugin may also work with previous versions but I
    have only tested Vim 7.3.
  - Vim must be compiled with python support (+python).
  - You must have the python-ibus package insalled in your system.

==============================================================================
3. Installation                                        *vim-im-installation*

It is recommended that you use a package manager like Pathogen or Vundle to
install this plugin. In the case of Vundle all you have to do is add this
line to your vimrc:
>
       Bundle 'hsanson/vim-im'
<
and then inside vim run the |:BundleInstall| command.

Make sure your vim has python support in it. To check this run:

        vim --version

if you see the +python flag then you have python support. If you don't
see the flag then you may need to recompile vim to add python support.

Make sure you have python ibus bindings installed:

        sudo apt-get install python-ibus

==============================================================================
4. Usage                                                        *vim-im-usage*

Since the iBus architecture changed significatively in version 1.5.0 this
plugin works in two different modes. If you have iBus version lower than
1.5.0 then this plugin should work out of the box without any additional
configurations in your vimrc. If you have iBus version above 1.5.0 then you
may need to set the *g:im_default_methods* variable to let the plugin know
which input method to set when entering normal mode.

4.1. iBus < 1.5.0                                            *vim-im-usage-old*

If your system has iBus with version older than 1.5.0 like Ubuntu 13.04 then
you do not need to add any configuration options to your vimrc file. All this
plugin does is ensure that iBus input method is disabled when you enter
Normal Mode.

You can try it by entering Insert Mode and then switch you input method on.
With the input method still exit Insert Mode and you will notice your input
method is disabled once Vim enters Normal Mode. If you re-enter Insert Mode
this plugin will enabled back the input method.

4.2. iBus > 1.5.0                                            *vim-im-usage-new*

Starting from iBus 1.5.0 onwards the architecture changed and it is no longer
possible to disable/enable the input method. Instead we need to set an input
method compatible with Normal Mode when we enter it.

Unfortunately for iBus 1.5.0 onwards we can install different engines and
each one has different input methods. For this reason we need to explicitely
tell Vim which input method we want default in Normal Mode for each of the
engines we use.

For this you must define the *g:im_default_methods* variable in your vimrc.
This variable is a simple dictionary that contains the name of the engine as
key and the default input method as value.

For example for the anthy and mozc-jp engines we have the following:

        let g:im_default_methods = {
                \ 'anthy'       :        'Latin',
                \ 'mozc-jp'     :        'Direct'
        \}

What input method is best for Normal Mode depends on the engine you use so it
is necessary to read the documentation or look at the configuration dialog of
the engine to determine the best option to set.

==============================================================================
5. Credits                                                *vim-im-credits*

 - https://github.com/vim-scripts/LustyExplorer plugin served as base to learn
   how to write ruby plugins.
 - https://gist.github.com/noborus/7541419 gist shows how to manipulate ibus
   via DBUS in ruby.
 - https://github.com/fuenor/im_control.vim.git served as example for python
   version of the plugin.

==============================================================================
 vim: tw=78 ts=8 sw=4 sts=4 et ft=help
